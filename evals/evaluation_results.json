{
  "results": {
    "wikitext": {
      "alias": "wikitext",
      "word_perplexity,none": 16.713583059878022,
      "word_perplexity_stderr,none": "N/A",
      "byte_perplexity,none": 1.6932462492436933,
      "byte_perplexity_stderr,none": "N/A",
      "bits_per_byte,none": 0.7597918000076144,
      "bits_per_byte_stderr,none": "N/A"
    }
  },
  "group_subtasks": {
    "wikitext": []
  },
  "configs": {
    "wikitext": {
      "task": "wikitext",
      "dataset_path": "EleutherAI/wikitext_document_level",
      "dataset_name": "wikitext-2-raw-v1",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "",
      "doc_to_target": "def wikitext_detokenizer(doc):\n    string = doc[\"page\"]\n    # contractions\n    string = string.replace(\"s '\", \"s'\")\n    string = re.sub(r\"/' [0-9]/\", r\"/'[0-9]/\", string)\n    # number separators\n    string = string.replace(\" @-@ \", \"-\")\n    string = string.replace(\" @,@ \", \",\")\n    string = string.replace(\" @.@ \", \".\")\n    # punctuation\n    string = string.replace(\" : \", \": \")\n    string = string.replace(\" ; \", \"; \")\n    string = string.replace(\" . \", \". \")\n    string = string.replace(\" ! \", \"! \")\n    string = string.replace(\" ? \", \"? \")\n    string = string.replace(\" , \", \", \")\n    # double brackets\n    string = re.sub(r\"\\(\\s*([^\\)]*?)\\s*\\)\", r\"(\\1)\", string)\n    string = re.sub(r\"\\[\\s*([^\\]]*?)\\s*\\]\", r\"[\\1]\", string)\n    string = re.sub(r\"{\\s*([^}]*?)\\s*}\", r\"{\\1}\", string)\n    string = re.sub(r\"\\\"\\s*([^\\\"]*?)\\s*\\\"\", r'\"\\1\"', string)\n    string = re.sub(r\"'\\s*([^']*?)\\s*'\", r\"'\\1'\", string)\n    # miscellaneous\n    string = string.replace(\"= = = =\", \"====\")\n    string = string.replace(\"= = =\", \"===\")\n    string = string.replace(\"= =\", \"==\")\n    string = string.replace(\" \" + chr(176) + \" \", chr(176))\n    string = string.replace(\" \\n\", \"\\n\")\n    string = string.replace(\"\\n \", \"\\n\")\n    string = string.replace(\" N \", \" 1 \")\n    string = string.replace(\" 's\", \"'s\")\n\n    return string\n",
      "unsafe_code": false,
      "process_results": "def process_results(doc, results):\n    (loglikelihood,) = results\n    # IMPORTANT: wikitext counts number of words in *original doc before detokenization*\n    _words = len(re.split(r\"\\s+\", doc[\"page\"]))\n    _bytes = len(doc[\"page\"].encode(\"utf-8\"))\n    return {\n        \"word_perplexity\": (loglikelihood, _words),\n        \"byte_perplexity\": (loglikelihood, _bytes),\n        \"bits_per_byte\": (loglikelihood, _bytes),\n    }\n",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 0,
      "metric_list": [
        {
          "metric": "word_perplexity"
        },
        {
          "metric": "byte_perplexity"
        },
        {
          "metric": "bits_per_byte"
        }
      ],
      "output_type": "loglikelihood_rolling",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "{{page}}",
      "metadata": {
        "version": 2.0,
        "pretrained": "fla-hub/delta_net-1.3B-100B",
        "dtype": "bfloat16",
        "trust_remote_code": true
      }
    }
  },
  "versions": {
    "wikitext": 2.0
  },
  "n-shot": {
    "wikitext": 0
  },
  "higher_is_better": {
    "wikitext": {
      "word_perplexity": false,
      "byte_perplexity": false,
      "bits_per_byte": false
    }
  },
  "n-samples": {
    "wikitext": {
      "original": 62,
      "effective": 62
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=fla-hub/delta_net-1.3B-100B,dtype=bfloat16,trust_remote_code=True,trust_remote_code=True",
    "model_num_parameters": 1365677056,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "b4dcbbafd4fde802717bdec3008d4aba9cb3a1f8",
    "batch_size": "8",
    "batch_sizes": [],
    "device": "cuda",
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": "8b3c1c3",
  "date": 1760425548.6949399,
  "transformers_version": "4.57.0",
  "lm_eval_version": "0.4.9.1",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "</s>",
    "2"
  ],
  "tokenizer_eos_token": [
    "</s>",
    "2"
  ],
  "tokenizer_bos_token": [
    "<s>",
    "1"
  ],
  "eot_token_id": 2,
  "max_length": 2048
}
